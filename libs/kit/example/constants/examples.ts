/** Don't edit this file! It has been generated automatically. */

export const EXAMPLES = {
  'accordion-simple-example' : {
    title: 'Базовый компонент',
    packagePath: 'accordion',
    moduleName: 'AccordionExampleModule',
    componentName: 'AccordionSimpleExample',
    selector: 'accordion-simple-example',
    files: ['accordion-simple-example.html','accordion-simple-example.scss','accordion-simple-example.ts'],
    loadAsync: () => import('../../pages/accordion/examples'),
  },
  'chart-enum-area' : {
    title: 'Enum',
    packagePath: 'area-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartEnumAreaComponent',
    selector: 'chart-enum-area',
    files: ['chart-enum-area.component.html','chart-enum-area.component.scss','chart-enum-area.component.ts'],
    loadAsync: () => import('../../pages/area-charts/examples'),
  },
  'chart-layer-area' : {
    title: 'Слои',
    packagePath: 'area-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartLayerAreaComponent',
    selector: 'chart-layer-area',
    files: ['chart-layer-area.component.html','chart-layer-area.component.scss','chart-layer-area.component.ts'],
    loadAsync: () => import('../../pages/area-charts/examples'),
  },
  'chart-legend-area' : {
    title: 'Легенда',
    packagePath: 'area-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartLegendAreaComponent',
    selector: 'chart-legend-area',
    files: ['chart-legend-area.component.html','chart-legend-area.component.scss','chart-legend-area.component.ts','tooltip.component.html','tooltip.component.scss','tooltip.component.ts'],
    loadAsync: () => import('../../pages/area-charts/examples'),
  },
  'chart-point-area' : {
    title: 'Пропущенные значения',
    packagePath: 'area-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartPointAreaComponent',
    selector: 'chart-point-area',
    files: ['chart-point-area.component.html','chart-point-area.component.scss','chart-point-area.component.ts'],
    loadAsync: () => import('../../pages/area-charts/examples'),
  },
  'chart-simple-area' : {
    title: 'Базовый',
    packagePath: 'area-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartSimpleAreaComponent',
    selector: 'chart-simple-area',
    files: ['chart-simple-area.component.html','chart-simple-area.component.scss','chart-simple-area.component.ts'],
    loadAsync: () => import('../../pages/area-charts/examples'),
  },
  'chart-time-area' : {
    title: 'Временной',
    packagePath: 'area-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartTimeAreaComponent',
    selector: 'chart-time-area',
    files: ['chart-time-area.component.html','chart-time-area.component.scss','chart-time-area.component.ts'],
    loadAsync: () => import('../../pages/area-charts/examples'),
  },
  'chart-update-area' : {
    title: 'Обновление данных',
    packagePath: 'area-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartUpdateAreaComponent',
    selector: 'chart-update-area',
    files: ['chart-update-area.component.html','chart-update-area.component.scss','chart-update-area.component.ts'],
    loadAsync: () => import('../../pages/area-charts/examples'),
  },
  'chart-zoom-area' : {
    title: 'Zoom',
    packagePath: 'area-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartZoomAreaComponent',
    selector: 'chart-zoom-area',
    files: ['chart-zoom-area.component.html','chart-zoom-area.component.scss','chart-zoom-area.component.ts'],
    loadAsync: () => import('../../pages/area-charts/examples'),
  },
  'chart-animation-bar' : {
    title: 'Анимация',
    packagePath: 'bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartAnimationBarComponent',
    selector: 'chart-animation-bar',
    files: ['chart-animation-bar.component.html','chart-animation-bar.component.scss','chart-animation-bar.component.ts'],
    loadAsync: () => import('../../pages/bar-charts/examples'),
  },
  'chart-enum-bar' : {
    title: 'Enum',
    packagePath: 'bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartEnumBarComponent',
    selector: 'chart-enum-bar',
    files: ['chart-enum-bar.component.html','chart-enum-bar.component.scss','chart-enum-bar.component.ts'],
    loadAsync: () => import('../../pages/bar-charts/examples'),
  },
  'chart-layer-bar' : {
    title: 'Слои',
    packagePath: 'bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartLayerBarComponent',
    selector: 'chart-layer-bar',
    files: ['chart-layer-bar.component.html','chart-layer-bar.component.scss','chart-layer-bar.component.ts'],
    loadAsync: () => import('../../pages/bar-charts/examples'),
  },
  'chart-setting-bar' : {
    title: 'Настройки',
    packagePath: 'bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartSettingBarComponent',
    selector: 'chart-setting-bar',
    files: ['chart-setting-bar.component.html','chart-setting-bar.component.scss','chart-setting-bar.component.ts'],
    loadAsync: () => import('../../pages/bar-charts/examples'),
  },
  'chart-simple-bar' : {
    title: 'Базовый',
    packagePath: 'bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartSimpleBarComponent',
    selector: 'chart-simple-bar',
    files: ['chart-simple-bar.component.html','chart-simple-bar.component.scss','chart-simple-bar.component.ts'],
    loadAsync: () => import('../../pages/bar-charts/examples'),
  },
  'chart-simple-horizontal-bar' : {
    title: 'Горизонтальный',
    packagePath: 'bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartSimpleHorizontalBarComponent',
    selector: 'chart-simple-horizontal-bar',
    files: ['chart-simple-horizontal-bar.component.html','chart-simple-horizontal-bar.component.scss','chart-simple-horizontal-bar.component.ts'],
    loadAsync: () => import('../../pages/bar-charts/examples'),
  },
  'chart-time-bar' : {
    title: 'Временной',
    packagePath: 'bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartTimeBarComponent',
    selector: 'chart-time-bar',
    files: ['chart-time-bar.component.html','chart-time-bar.component.scss','chart-time-bar.component.ts'],
    loadAsync: () => import('../../pages/bar-charts/examples'),
  },
  'chart-tooltip-horizontal-bar' : {
    title: 'Кастомный тултип',
    packagePath: 'bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartTooltipHorizontalBarComponent',
    selector: 'chart-tooltip-horizontal-bar',
    files: ['chart-tooltip-horizontal-bar.component.html','chart-tooltip-horizontal-bar.component.scss','chart-tooltip-horizontal-bar.component.ts','tooltip.component.html','tooltip.component.scss','tooltip.component.ts'],
    loadAsync: () => import('../../pages/bar-charts/examples'),
  },
  'chart-update-bar' : {
    title: 'Обновление данных',
    packagePath: 'bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartUpdateBarComponent',
    selector: 'chart-update-bar',
    files: ['chart-update-bar.component.html','chart-update-bar.component.scss','chart-update-bar.component.ts'],
    loadAsync: () => import('../../pages/bar-charts/examples'),
  },
  'chart-update-horizontal-bar' : {
    title: 'Обновление данных',
    packagePath: 'bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartUpdateHorizontalBarComponent',
    selector: 'chart-update-horizontal-bar',
    files: ['chart-update-horizontal-bar.component.html','chart-update-horizontal-bar.component.scss','chart-update-horizontal-bar.component.ts'],
    loadAsync: () => import('../../pages/bar-charts/examples'),
  },
  'chart-zoom-bar' : {
    title: 'Zoom',
    packagePath: 'bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartZoomBarComponent',
    selector: 'chart-zoom-bar',
    files: ['chart-zoom-bar.component.html','chart-zoom-bar.component.scss','chart-zoom-bar.component.ts'],
    loadAsync: () => import('../../pages/bar-charts/examples'),
  },
  'button-icon-example' : {
    title: 'Иконки',
    packagePath: 'button',
    moduleName: 'ButtonExampleModule',
    componentName: 'ButtonIconExample',
    selector: 'button-icon-example',
    files: ['button-icon-example.html','button-icon-example.scss','button-icon-example.ts'],
    loadAsync: () => import('../../pages/button/examples'),
  },
  'button-size-example' : {
    title: 'Размер',
    packagePath: 'button',
    moduleName: 'ButtonExampleModule',
    componentName: 'ButtonSizeExample',
    selector: 'button-size-example',
    files: ['button-size-example.html','button-size-example.scss','button-size-example.ts'],
    loadAsync: () => import('../../pages/button/examples'),
  },
  'button-style-example' : {
    title: 'Стиль',
    packagePath: 'button',
    moduleName: 'ButtonExampleModule',
    componentName: 'ButtonStyleExample',
    selector: 'button-style-example',
    files: ['button-style-example.html','button-style-example.scss','button-style-example.ts'],
    loadAsync: () => import('../../pages/button/examples'),
  },
  'checkbox-simple-example' : {
    title: 'Базовый компонент',
    packagePath: 'checkbox',
    moduleName: 'CheckboxExampleModule',
    componentName: 'CheckboxSimpleExample',
    selector: 'checkbox-simple-example',
    files: ['checkbox-simple-example.html','checkbox-simple-example.ts'],
    loadAsync: () => import('../../pages/checkbox/examples'),
  },
  'chart-combo-bar' : {
    title: 'Базовый',
    packagePath: 'combo-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartComboBarComponent',
    selector: 'chart-combo-bar',
    files: ['chart-combo-bar.component.html','chart-combo-bar.component.scss','chart-combo-bar.component.ts'],
    loadAsync: () => import('../../pages/combo-bar-charts/examples'),
  },
  'chart-combo-horizontal-bar' : {
    title: 'Горизонтальный',
    packagePath: 'combo-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartComboHorizontalBarComponent',
    selector: 'chart-combo-horizontal-bar',
    files: ['chart-combo-horizontal-bar.component.html','chart-combo-horizontal-bar.component.scss','chart-combo-horizontal-bar.component.ts','const.ts'],
    loadAsync: () => import('../../pages/combo-bar-charts/examples'),
  },
  'chart-enum-horizontal-combo-bar' : {
    title: 'Enum',
    packagePath: 'combo-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartEnumHorizontalComboBarComponent',
    selector: 'chart-enum-horizontal-combo-bar',
    files: ['chart-enum-horizontal-combo-bar.component.html','chart-enum-horizontal-combo-bar.component.scss','chart-enum-horizontal-combo-bar.component.ts'],
    loadAsync: () => import('../../pages/combo-bar-charts/examples'),
  },
  'chart-setting-combo-bar' : {
    title: 'Настройки',
    packagePath: 'combo-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartSettingComboBarComponent',
    selector: 'chart-setting-combo-bar',
    files: ['chart-setting-combo-bar.component.html','chart-setting-combo-bar.component.scss','chart-setting-combo-bar.component.ts'],
    loadAsync: () => import('../../pages/combo-bar-charts/examples'),
  },
  'chart-stack-combo-bar' : {
    title: 'Базовый',
    packagePath: 'combo-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartStackComboBarComponent',
    selector: 'chart-stack-combo-bar',
    files: ['chart-stack-combo-bar.component.html','chart-stack-combo-bar.component.scss','chart-stack-combo-bar.component.ts'],
    loadAsync: () => import('../../pages/combo-bar-charts/examples'),
  },
  'chart-update-combo-bar' : {
    title: 'Обновление данных',
    packagePath: 'combo-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartUpdateComboBarComponent',
    selector: 'chart-update-combo-bar',
    files: ['chart-update-combo-bar.component.html','chart-update-combo-bar.component.scss','chart-update-combo-bar.component.ts'],
    loadAsync: () => import('../../pages/combo-bar-charts/examples'),
  },
  'chart-update-horizontal-combo-bar' : {
    title: 'Обновление данных',
    packagePath: 'combo-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartUpdateHorizontalComboBarComponent',
    selector: 'chart-update-horizontal-combo-bar',
    files: ['chart-update-horizontal-combo-bar.component.html','chart-update-horizontal-combo-bar.component.scss','chart-update-horizontal-combo-bar.component.ts'],
    loadAsync: () => import('../../pages/combo-bar-charts/examples'),
  },
  'combo-chart-generator' : {
    title: 'undefined',
    packagePath: 'combo-charts',
    moduleName: 'ChartsExampleModule',
    componentName: 'ComboChartGeneratorComponent',
    selector: 'combo-chart-generator',
    files: ['combo-chart-generator.component.html','combo-chart-generator.component.scss','combo-chart-generator.component.ts'],
    loadAsync: () => import('../../pages/combo-charts/examples'),
  },
  'combo-chart-graph' : {
    title: 'Настройки',
    packagePath: 'combo-charts',
    moduleName: 'ChartsExampleModule',
    componentName: 'ComboChartGraphComponent',
    selector: 'combo-chart-graph',
    files: ['combo-chart-graph.component.html','combo-chart-graph.component.scss','combo-chart-graph.component.ts','model.ts'],
    loadAsync: () => import('../../pages/combo-charts/examples'),
  },
  'combo-chart-selector' : {
    title: 'undefined',
    packagePath: 'combo-charts',
    moduleName: 'ChartsExampleModule',
    componentName: 'ComboChartSelectorComponent',
    selector: 'combo-chart-selector',
    files: ['combo-chart-selector.component.html','combo-chart-selector.component.scss','combo-chart-selector.component.ts'],
    loadAsync: () => import('../../pages/combo-charts/examples'),
  },
  'combo-chart-settings' : {
    title: 'undefined',
    packagePath: 'combo-charts',
    moduleName: 'ChartsExampleModule',
    componentName: 'ComboChartSettingsComponent',
    selector: 'combo-chart-settings',
    files: ['combo-chart-settings.component.html','combo-chart-settings.component.scss','combo-chart-settings.component.ts'],
    loadAsync: () => import('../../pages/combo-charts/examples'),
  },
  'combo-chart-view' : {
    title: 'undefined',
    packagePath: 'combo-charts',
    moduleName: 'ChartsExampleModule',
    componentName: 'undefined',
    selector: 'combo-chart-view',
    files: ['combo-chart-view.component.html','combo-chart-view.component.scss','combo-chart-view.component.ts','combo-chart-view.service.ts','const.ts','model.ts'],
    loadAsync: () => import('../../pages/combo-charts/examples'),
  },
  'input-native-example' : {
    title: 'Нативные контроллы',
    packagePath: 'input',
    moduleName: 'InputExampleModule',
    componentName: 'InputNativeExample',
    selector: 'input-native-example',
    files: ['input-native-example.html','input-native-example.scss','input-native-example.ts'],
    loadAsync: () => import('../../pages/input/examples'),
  },
  'input-simple-example' : {
    title: 'Базовый компонент',
    packagePath: 'input',
    moduleName: 'InputExampleModule',
    componentName: 'InputSimpleExample',
    selector: 'input-simple-example',
    files: ['input-simple-example.html','input-simple-example.scss','input-simple-example.ts'],
    loadAsync: () => import('../../pages/input/examples'),
  },
  'chart-animation-line' : {
    title: 'Анимация',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartAnimationLineComponent',
    selector: 'chart-animation-line',
    files: ['chart-animation-line.component.html','chart-animation-line.component.scss','chart-animation-line.component.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'chart-enum-line' : {
    title: 'Enum',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartEnumLineComponent',
    selector: 'chart-enum-line',
    files: ['chart-enum-line.component.html','chart-enum-line.component.scss','chart-enum-line.component.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'chart-interpolate-line' : {
    title: 'Интерполяция',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartInterpolateLineComponent',
    selector: 'chart-interpolate-line',
    files: ['chart-interpolate-line.component.html','chart-interpolate-line.component.scss','chart-interpolate-line.component.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'chart-layer-line' : {
    title: 'Слои',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartLayerLineComponent',
    selector: 'chart-layer-line',
    files: ['chart-layer-line.component.html','chart-layer-line.component.scss','chart-layer-line.component.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'chart-legend-tooltip-line' : {
    title: 'Кастомная легенда и тултип',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartLegendTooltipLineComponent',
    selector: 'chart-legend-tooltip-line',
    files: ['chart-legend-tooltip-line.component.html','chart-legend-tooltip-line.component.scss','chart-legend-tooltip-line.component.ts','tooltip.component.html','tooltip.component.scss','tooltip.component.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'chart-point-line' : {
    title: 'Точки',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartPointLineComponent',
    selector: 'chart-point-line',
    files: ['chart-point-line.component.html','chart-point-line.component.scss','chart-point-line.component.ts','data.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'chart-setting-line' : {
    title: 'Настройки',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartSettingLineComponent',
    selector: 'chart-setting-line',
    files: ['chart-setting-line.component.html','chart-setting-line.component.scss','chart-setting-line.component.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'chart-simple-line' : {
    title: 'Базовый',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartSimpleLineComponent',
    selector: 'chart-simple-line',
    files: ['chart-simple-line.component.html','chart-simple-line.component.scss','chart-simple-line.component.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'chart-time-line' : {
    title: 'Временной',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartTimeLineComponent',
    selector: 'chart-time-line',
    files: ['chart-time-line.component.html','chart-time-line.component.scss','chart-time-line.component.ts','const.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'chart-type-line' : {
    title: 'Типы трендов',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartTypeLineComponent',
    selector: 'chart-type-line',
    files: ['chart-type-line.component.html','chart-type-line.component.scss','chart-type-line.component.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'chart-update-line' : {
    title: 'Обновление данных',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartUpdateLineComponent',
    selector: 'chart-update-line',
    files: ['chart-update-line.component.html','chart-update-line.component.scss','chart-update-line.component.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'chart-zoom-line' : {
    title: 'Zoom',
    packagePath: 'line-charts',
    moduleName: 'LineChartExampleModule',
    componentName: 'ChartZoomLineComponent',
    selector: 'chart-zoom-line',
    files: ['chart-zoom-line.component.html','chart-zoom-line.component.scss','chart-zoom-line.component.ts'],
    loadAsync: () => import('../../pages/line-charts/examples'),
  },
  'range-simple-example' : {
    title: 'Базовый компонент',
    packagePath: 'range',
    moduleName: 'RangeExampleModule',
    componentName: 'RangeSimpleComponent',
    selector: 'range-simple-example',
    files: ['range-simple-example.html','range-simple-example.scss','range-simple-example.ts'],
    loadAsync: () => import('../../pages/range/examples'),
  },
  'chart-horizontal-range-bar' : {
    title: 'Горизонтальный',
    packagePath: 'range-bar-charts',
    moduleName: 'RangeBarChartExampleModule',
    componentName: 'ChartHorizontalRangeBarComponent',
    selector: 'chart-horizontal-range-bar',
    files: ['chart-horizontal-range-bar.component.html','chart-horizontal-range-bar.component.scss','chart-horizontal-range-bar.component.ts'],
    loadAsync: () => import('../../pages/range-bar-charts/examples'),
  },
  'chart-horizontal-range-bar-update' : {
    title: 'Обновление данных',
    packagePath: 'range-bar-charts',
    moduleName: 'RangeBarChartExampleModule',
    componentName: 'ChartHorizontalRangeBarUpdateComponent',
    selector: 'chart-horizontal-range-bar-update',
    files: ['chart-horizontal-range-bar-update.component.html','chart-horizontal-range-bar-update.component.scss','chart-horizontal-range-bar-update.component.ts'],
    loadAsync: () => import('../../pages/range-bar-charts/examples'),
  },
  'chart-range-bar' : {
    title: 'Базовый',
    packagePath: 'range-bar-charts',
    moduleName: 'RangeBarChartExampleModule',
    componentName: 'ChartRangeBarComponent',
    selector: 'chart-range-bar',
    files: ['chart-range-bar.component.html','chart-range-bar.component.scss','chart-range-bar.component.ts'],
    loadAsync: () => import('../../pages/range-bar-charts/examples'),
  },
  'chart-range-bar-setting' : {
    title: 'Настройки',
    packagePath: 'range-bar-charts',
    moduleName: 'RangeBarChartExampleModule',
    componentName: 'ChartRangeBarSettingComponent',
    selector: 'chart-range-bar-setting',
    files: ['chart-range-bar-setting.component.html','chart-range-bar-setting.component.scss','chart-range-bar-setting.component.ts'],
    loadAsync: () => import('../../pages/range-bar-charts/examples'),
  },
  'chart-range-bar-update' : {
    title: 'Обновление данных',
    packagePath: 'range-bar-charts',
    moduleName: 'RangeBarChartExampleModule',
    componentName: 'ChartRangeBarUpdateComponent',
    selector: 'chart-range-bar-update',
    files: ['chart-range-bar-update.component.html','chart-range-bar-update.component.scss','chart-range-bar-update.component.ts'],
    loadAsync: () => import('../../pages/range-bar-charts/examples'),
  },
  'select-simple-example' : {
    title: 'Базовый компонент',
    packagePath: 'select',
    moduleName: 'SelectExampleModule',
    componentName: 'SelectSimpleExample',
    selector: 'select-simple-example',
    files: ['select-simple-example.html','select-simple-example.scss','select-simple-example.ts'],
    loadAsync: () => import('../../pages/select/examples'),
  },
  'slider-simple-example' : {
    title: 'Базовый компонент',
    packagePath: 'slider',
    moduleName: 'SliderExampleModule',
    componentName: 'SliderSimpleComponent',
    selector: 'slider-simple-example',
    files: ['slider-simple-example.html','slider-simple-example.scss','slider-simple-example.ts'],
    loadAsync: () => import('../../pages/slider/examples'),
  },
  'spinner-simple-example' : {
    title: 'Базовый компонент',
    packagePath: 'spinner',
    moduleName: 'SpinnerExampleModule',
    componentName: 'SpinnerSimpleComponent',
    selector: 'spinner-simple-example',
    files: ['spinner-simple-example.html','spinner-simple-example.ts'],
    loadAsync: () => import('../../pages/spinner/examples'),
  },
  'chart-full-stack-bar' : {
    title: 'full stack',
    packagePath: 'stack-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartFullStackBarComponent',
    selector: 'chart-full-stack-bar',
    files: ['chart-full-stack-bar.component.html','chart-full-stack-bar.component.scss','chart-full-stack-bar.component.ts'],
    loadAsync: () => import('../../pages/stack-bar-charts/examples'),
  },
  'chart-horizontal-full-stack-bar' : {
    title: 'Горизонтальный',
    packagePath: 'stack-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartHorizontalFullStackBarComponent',
    selector: 'chart-horizontal-full-stack-bar',
    files: ['chart-horizontal-full-stack-bar.component.html','chart-horizontal-full-stack-bar.component.scss','chart-horizontal-full-stack-bar.component.ts'],
    loadAsync: () => import('../../pages/stack-bar-charts/examples'),
  },
  'chart-horizontal-stack-bar' : {
    title: 'Горизонтальный',
    packagePath: 'stack-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartHorizontalStackBarComponent',
    selector: 'chart-horizontal-stack-bar',
    files: ['chart-horizontal-stack-bar.component.html','chart-horizontal-stack-bar.component.scss','chart-horizontal-stack-bar.component.ts'],
    loadAsync: () => import('../../pages/stack-bar-charts/examples'),
  },
  'chart-horizontal-stack-bar-update' : {
    title: 'Обновление данных',
    packagePath: 'stack-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartHorizontalStackBarUpdateComponent',
    selector: 'chart-horizontal-stack-bar-update',
    files: ['chart-horizontal-stack-bar-update.component.html','chart-horizontal-stack-bar-update.component.scss','chart-horizontal-stack-bar-update.component.ts'],
    loadAsync: () => import('../../pages/stack-bar-charts/examples'),
  },
  'chart-setting-stack-bar' : {
    title: 'Настройки',
    packagePath: 'stack-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartSettingStackBarComponent',
    selector: 'chart-setting-stack-bar',
    files: ['chart-setting-stack-bar.component.html','chart-setting-stack-bar.component.scss','chart-setting-stack-bar.component.ts'],
    loadAsync: () => import('../../pages/stack-bar-charts/examples'),
  },
  'chart-stack-bar' : {
    title: 'Базовый',
    packagePath: 'stack-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartStackBarComponent',
    selector: 'chart-stack-bar',
    files: ['chart-stack-bar.component.html','chart-stack-bar.component.scss','chart-stack-bar.component.ts'],
    loadAsync: () => import('../../pages/stack-bar-charts/examples'),
  },
  'chart-stack-bar-animation' : {
    title: 'Анимация',
    packagePath: 'stack-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartStackBarAnimationComponent',
    selector: 'chart-stack-bar-animation',
    files: ['chart-stack-bar-animation.component.html','chart-stack-bar-animation.component.scss','chart-stack-bar-animation.component.ts'],
    loadAsync: () => import('../../pages/stack-bar-charts/examples'),
  },
  'chart-stack-bar-enum' : {
    title: 'Enum',
    packagePath: 'stack-bar-charts',
    moduleName: 'BarChartExampleModule',
    componentName: 'ChartStackBarEnumComponent',
    selector: 'chart-stack-bar-enum',
    files: ['chart-stack-bar-enum.component.html','chart-stack-bar-enum.component.scss','chart-stack-bar-enum.component.ts'],
    loadAsync: () => import('../../pages/stack-bar-charts/examples'),
  },
  'tabs-simple-example' : {
    title: 'Базовый компонент',
    packagePath: 'tabs',
    moduleName: 'TabsExampleModule',
    componentName: 'TabsSimpleExample',
    selector: 'tabs-simple-example',
    files: ['lorem.ts','tabs-simple-example.html','tabs-simple-example.scss','tabs-simple-example.ts'],
    loadAsync: () => import('../../pages/tabs/examples'),
  },
  'toggle-simple-example' : {
    title: 'Базовый компонент',
    packagePath: 'toggle',
    moduleName: 'ToggleExampleModule',
    componentName: 'ToggleSimpleExample',
    selector: 'toggle-simple-example',
    files: ['toggle-simple-example.html','toggle-simple-example.ts'],
    loadAsync: () => import('../../pages/toggle/examples'),
  },
  'toggle-size-example' : {
    title: 'Размеры',
    packagePath: 'toggle',
    moduleName: 'ToggleExampleModule',
    componentName: 'ToggleSizeExample',
    selector: 'toggle-size-example',
    files: ['toggle-size-example.html','toggle-size-example.scss','toggle-size-example.ts'],
    loadAsync: () => import('../../pages/toggle/examples'),
  },
  'sides-small-example' : {
    title: 'Базовый',
    packagePath: 'tooltip',
    moduleName: 'TooltipExample',
    componentName: 'SidesSmallExampleComponent',
    selector: 'sides-small-example',
    files: ['sides-small-example.component.html','sides-small-example.component.scss','sides-small-example.component.ts'],
    loadAsync: () => import('../../pages/tooltip/examples'),
  },
  'sides-small-template-example' : {
    title: 'Шаблон',
    packagePath: 'tooltip',
    moduleName: 'TooltipExample',
    componentName: 'SidesSmallTemplateExampleComponent',
    selector: 'sides-small-template-example',
    files: ['sides-small-template-example.component.html','sides-small-template-example.component.scss','sides-small-template-example.component.ts'],
    loadAsync: () => import('../../pages/tooltip/examples'),
  },
  'title-example' : {
    title: 'Заголовок',
    packagePath: 'tooltip',
    moduleName: 'TooltipExample',
    componentName: 'TitleExampleComponent',
    selector: 'title-example',
    files: ['title-example.component.html','title-example.component.scss','title-example.component.ts'],
    loadAsync: () => import('../../pages/tooltip/examples'),
  },
  'typography-header-example' : {
    title: 'Заголовок',
    packagePath: 'typography',
    moduleName: 'TypographyExampleModule',
    componentName: 'TypographyHeaderExample',
    selector: 'typography-header-example',
    files: ['typography-header-example.html','typography-header-example.ts'],
    loadAsync: () => import('../../pages/typography/examples'),
  },
  'typography-link-example' : {
    title: 'Ссылка',
    packagePath: 'typography',
    moduleName: 'TypographyExampleModule',
    componentName: 'TypographyLinkExample',
    selector: 'typography-link-example',
    files: ['typography-link-example.html','typography-link-example.ts'],
    loadAsync: () => import('../../pages/typography/examples'),
  }
};